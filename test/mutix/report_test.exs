defmodule Mutix.ReportTest do
  @moduledoc false

  use ExUnit.Case, async: false

  alias Mutix.Report

  @single_operator_result """
  Results:

      1 mutants were generated by mutating ( > ) into ( < ).

      5 tests were run for each mutant.

      0 / 1 mutants killed by the test suite.

      Mutation score: 100.0 %

  Surviving mutants (no test failed with these injections):

      test/support/single_operator_source.ex - line 3 where ( > ) was mutated into ( < )


  """

  describe "mutation/3" do
    test "produces a mutation report for the output of a list of mutation test suites" do
      test_results = [
        {%{total: 5, failures: 0, excluded: 0, skipped: 0}, [index_on_line: 0, line: 3],
         "\e[32m.\e[0m\e[32m.\e[0m\e[32m.\e[0m\e[32m.\e[0m\e[32m.\e[0m\nFinished in 0.00 seconds (0.00s async, 0.00s sync)\n\e[32m5 tests, 0 failures\e[0m\n\nRandomized with seed 940459\n"}
      ]

      source_file_path = "test/support/single_operator_source.ex"
      operator_mutation = {:>, :<}

      result = Report.mutation(test_results, source_file_path, operator_mutation)
      assert result == String.replace_trailing(@single_operator_result, "\n\n\n", "\n\n")
    end
  end
end
